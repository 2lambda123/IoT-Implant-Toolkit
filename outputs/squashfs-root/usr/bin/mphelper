#!/bin/sh


TIMEOUT=5
MPATH="mediaplayer"
METHOD="player_play_operation"

play_resume() {
    ubus -t $TIMEOUT call $MPATH $METHOD  {\"action\":\"play\",\"media\":\"common\"}
}

play_pause() {
    ubus -t $TIMEOUT call $MPATH $METHOD {\"action\":\"pause\",\"media\":\"common\"}
}

play_toggle() {
    aplay /usr/share/sound/key_prev_next.wav &> /dev/null &
    ubus -t $TIMEOUT call $MPATH $METHOD {\"action\":\"toggle\",\"media\":\"common\"}
    /usr/bin/mico_voip_service.sh play &
}

play_next() {
    aplay /usr/share/sound/key_prev_next.wav &> /dev/null &
    ubus -t $TIMEOUT call $MPATH $METHOD {\"action\":\"next\",\"media\":\"common\"}
}

play_previous() {
    aplay /usr/share/sound/key_prev_next.wav &> /dev/null &
    ubus -t $TIMEOUT call $MPATH $METHOD {\"action\":\"prev\",\"media\":\"common\"}
}

play_channel() {
    aplay /usr/share/sound/key_prev_next.wav &> /dev/null &
    ubus -t $TIMEOUT call $MPATH $METHOD {\"action\":\"channel\",\"media\":\"common\"}
}

play_mute() {
    aplay /usr/share/sound/key_prev_next.wav &> /dev/null &
}

play_tone()
{
    ubus -t 1 call mediaplayer player_play_url {\"url\":\""$1"\",\"type\":1}
}

mute_stat()
{
    source /usr/share/libubox/jshn.sh
    play_status=$(ubus call mediaplayer player_get_play_status)
    [ x"$play_status" == x"" ] && exit 1
    json_init 
    json_load "$play_status"
    json_get_var info_string info
    json_cleanup

    [ x"$info_string" == x"" ] && exit 1
    json_init
    json_load "$info_string"
    json_get_var status_string status
    json_cleanup
    echo $status_string
    #if [ x"$status_string" == x"1" ]; then
    #    echo "play"
    #else
    #    echo "mute"
    #fi
}

volume_get()
{
    source /usr/share/libubox/jshn.sh
    play_status=$(ubus call mediaplayer player_get_play_status)
    [ x"$play_status" == x"" ] && exit 1
    json_init 
    json_load "$play_status"
    json_get_var info_string info
    json_cleanup

    [ x"$info_string" == x"" ] && exit 1
    json_init
    json_load "$info_string"
    json_get_var volume_string volume
    json_cleanup
    echo "$volume_string"
}

VOLUME_STEP=4
VOLUME_MIN=0
VOLUME_MAX=100
volume_set()
{
    local volume="$1"
    ubus -t $TIMEOUT call $MPATH player_set_volume {\"volume\":"$1"}
}

volume_up()
{
    local volume=$(volume_get)
    [ $(echo "$volume" | grep '^[[:digit:]]*$') ] && {
        local new_volume=$((volume+VOLUME_STEP))
        volume_set "$new_volume"
    }
}

volume_down()
{
    local volume=$(volume_get)
    [ $(echo "$volume" | grep '^[[:digit:]]*$') ] && {
        local new_volume=$((volume-VOLUME_STEP))
        volume_set "$new_volume"
    }
}


case "$1" in
    play)
	play_resume
	;;
    pause)
	play_pause
	;;
    toggle)
	play_toggle
	;;
    next)
	play_next
	;;
    prev)
	play_previous
	;;
    ch)
	play_channel
	;;
    mute)
	play_pause
	;;
    mu)
	play_mute
	;;
    mute_stat)
        mute_stat
        ;;
    volume_get)
	volume_get
	;;
    volume_set)
	volume_set "$2"
	;;
    volume_up)
	volume_up
	;;
    volume_down) 	
	volume_down
	;;
    tone)
        play_tone "$2"
        ;;
esac


