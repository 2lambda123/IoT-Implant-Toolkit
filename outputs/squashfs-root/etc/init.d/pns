#!/bin/sh /etc/rc.common

START=85

USE_PROCD=1
ROOT_PATH=/usr/lib/nuance
EXTRA_COMMANDS="toggle refresh mitv_on mitv_off mitv_get mic_on mic_off mic_get"
export LED_PARENT=pns

_start_mipns_nuance() {
    local voip_status=$(cat /tmp/mico-voip/status)
    mkdir -p /data/pns
    procd_open_instance
    if [ '2' = $voip_status ]; then
        procd_set_param command /usr/lib/nuance/demos/mipns-nuance -V -c /usr/lib/nuance/demos/config.json
    else
        procd_set_param command /usr/lib/nuance/demos/mipns-nuance -c /usr/lib/nuance/demos/config.json -l
    fi
    procd_set_param env NUANCE_MIX_1_0_NODELIB_PATH=/usr/lib/nuance/mix-1.0/bundles
    procd_append_param env NUANCE_ELVIS_35_2_MODEL_PATH=/usr/lib/nuance/elvis-35.2/data
    procd_append_param env NUANCE_VOCON_4_11_MODEL_PATH=/usr/lib/nuance/vocon-4.11/models
    procd_set_param nice
    procd_append_param nice -10
    procd_set_param respawn
    procd_append_param respawn 3600
    procd_append_param respawn 5
    procd_append_param respawn 5
    procd_set_param stdout 0
    procd_set_param stderr 0
    procd_close_instance
}

_start_mipns_soundai() {
    local voip_status=$(cat /tmp/mico-voip/status)
    procd_open_instance
    if [ '2' = $voip_status ]; then
        procd_set_param command /usr/bin/mipns-sai -c /usr/share/sai/ -v
    else
        procd_set_param command /usr/bin/mipns-sai -c /usr/share/sai/
    fi
    procd_set_param nice
    procd_append_param nice -10
    procd_set_param respawn
    procd_append_param respawn 3600
    procd_append_param respawn 5
    procd_append_param respawn 5
    procd_set_param stdout 0
    procd_set_param stderr 0
    procd_close_instance
}

start_service() {
    if [ "soundai" = $(uci get system.pns.vendor) ]; then
        _start_mipns_soundai
    else
        _start_mipns_nuance
    fi
}

stop_service() {
    rm -rf /tmp/mico/upload
    if [ "soundai" = $(uci get system.pns.vendor) ]; then
        rm -rf /tmp/mico/soundai
    else
        rm -rf /tmp/mico/nuance
    fi
}

service_running() {
    [ $(pidof mipns) ] || [ $(pidof mipns-sai) ]
}

_set_volume() {
    local MVOL="255" # max wakeup notify volume 255
    local vol=`ubus -t1 -S call mediaplayer get_media_volume | cut -d':' -f2 |cut -d '}' -f1`
    if [ "$vol" -gt "$MVOL" ]; then
	# 3. tune vol if it is too loud.
	amixer sset notifyvol "$MVOL" > /dev/null
    else
	amixer sset notifyvol "$vol" > /dev/null
    fi
}

toggle() {
    if service_running; then
	stop
	show_led 7
	_set_volume
	ubus -t 1 call qplayer play {\"play\":\"/usr/share/sound/mic_off.wav\"}
	# recover mediaplayer status when mute after wakeup
	ubus -t 1 call mediaplayer player_wakeup {\"action\":\"stop\"}
	logger stat_points_none micolog_mic_off_count=1 > /dev/null 2>&1  &
    else
	start
	shut_led 7
	_set_volume
	ubus -t 1 call qplayer play {\"play\":\"/usr/share/sound/mic_on.wav\"}
	logger stat_points_none micolog_mic_on_count=1  > /dev/null 2>&1 &
    fi
}

mic_on() {
    if service_running; then
	echo "do nothing"
    else
	start
	shut_led 7
	_set_volume
	ubus -t 1 call qplayer play {\"play\":\"/usr/share/sound/mic_on.wav\"}
	logger stat_points_none micolog_mic_on_count=1 > /dev/null 2>&1 &
    fi
}

mic_off() {
    if service_running; then
	stop
	show_led 7
	_set_volume
	ubus -t 1 call qplayer play {\"play\":\"/usr/share/sound/mic_off.wav\"}
	# recover mediaplayer status when mute after wakeup
	ubus -t 1 call mediaplayer player_wakeup {\"action\":\"stop\"}
	logger stat_points_none micolog_mic_off_count=1 > /dev/null 2>&1 &
    else
	echo "do nothing"
    fi
}

mic_get() {
    if service_running; then
	echo "on"
    else
	echo "off"
    fi
}

refresh() {
    if service_running; then
	restart
	logger -t mipns-refresh -p 3 "Refresh pns service..."
    fi
}

mitv_on() {
    # set mitv wakeup on
    if [ ! -d "/data/pns/" ]; then
	mkdir "/data/pns/"
    fi
    echo "on" > /data/pns/mitv
    kill -s SIGHUP $(pidof mipns-sai)
}

mitv_off() {
    # set mitv wakeup off
    if [ ! -d "/data/pns" ]; then
	mkdir "/data/pns/"
    fi
    echo "off" > /data/pns/mitv
    kill -s SIGHUP $(pidof mipns-sai)
}

mitv_get() {
    if [ -f "/data/pns/mitv" ]; then
	cat /data/pns/mitv
    else
	echo "off"
    fi
}
